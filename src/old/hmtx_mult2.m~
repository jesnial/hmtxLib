function C = hmtx_mult2(A,B,C)

% C = A*B

% 21.01.2013

% 23.01.2013: uses HMTX_CREATE to create H-matrix structure

% check dimenisons
%
% HISTORY :
%
% 29.11.2019: fixed cross-type cases. supermatrix and rk becomes rk
% 03.12.2019: added recompression
% 16.12.2019: new refurbished version

if strcmpi(C.type,'supermatrix')
    if strcmpi(A.type,'supermatrix') && strcmpi(B.type,'supermatrix')
        for i = 1:2
            for j = 1:2
                Ca = hmtx_copystruct(C.M{i,j});
                Ca = hmtx_mult2(A.M{i,1},B.M{1,j},Ca);
                Cb = hmtx_copystruct(C.M{i,j});
                Cb = hmtx_mult2(A.M{i,2},B.M{2,j},Cb);
                C.M{i,j} = hmtx_add(Ca,Cb,'+');
            end
        end
        C.eps = max([A.eps B.eps]);
    elseif strcmpi(A.type,'fullmatrix') && strcmpi(B.type,'supermatrix')
        % solution as fullmatrix
        Ctmp = hmtx_create('fullmatrix',A.irow,B.jcol);
        Ctmp.M = hmtx_MxH(A.M,B);
        Ctmp.eps = max([A.eps B.eps]);
        % conversion to supermatrix
        C = formatconversion(Ctmp,C);
    elseif strcmpi(A.type,'rkmatrix') && strcmpi(B.type,'supermatrix')
        % solution as rkmatrix
        Ctmp = hmtx_create('rkmatrix',A.irow,B.jcol);
        Ctmp.V = hmtx_MxH(A.V',B)';
        Ctmp.U = A.U;
        Ctmp = rSVD_rkmatrix(Ctmp,max([A.eps B.eps]));
        % conversion to supermatrix
        C = formatconversion(Ctmp,C);
    elseif strcmpi(A.type,'supermatrix') && strcmpi(B.type,'fullmatrix')
        % solution as fullmatrix
        Ctmp = hmtx_create('fullmatrix',A.irow,B.jcol);
        Ctmp.M = hmtx_HxM(A,B.M);
        Ctmp.eps = max([A.eps B.eps]);
        % conversion to supermatrix
        C = formatconversion(Ctmp,C);
    elseif strcmpi(A.type,'fullmatrix') && strcmpi(B.type,'fullmatrix')
        % solution as fullmatrix
        Ctmp = hmtx_create('fullmatrix',A.irow,B.jcol);
        Ctmp.M = A.M*B.M;
        Ctmp.eps = max([A.eps B.eps]);
        % conversion to supermatrix
        C = formatconversion(Ctmp,C);
    elseif strcmpi(A.type,'rkmatrix') && strcmpi(B.type,'fullmatrix')
        % solution as rkmatrix
        Ctmp = hmtx_create('rkmatrix',A.irow,B.jcol);
        Ctmp.U = A.U;
        Ctmp.V = B.M'*A.V;
        Ctmp = rSVD_rkmatrix(Ctmp,max([A.eps B.eps]));
        % conversion to supermatrix
        C = formatconversion(Ctmp,C);
    elseif strcmpi(A.type,'supermatrix') && strcmpi(B.type,'rkmatrix')
        % solution as rkmatrix
        Ctmp = hmtx_create('rkmatrix',A.irow,B.jcol);
        Ctmp.U = hmtx_HxM(A,B.U);
        Ctmp.V = B.V;
        Ctmp = rSVD_rkmatrix(Ctmp,max([A.eps B.eps]));
        % conversion to supermatrix
        C = formatconversion(Ctmp,C);
    elseif strcmpi(A.type,'fullmatrix') && strcmpi(B.type,'rkmatrix')
        % solution as rkmatrix
        Ctmp = hmtx_create('rkmatrix',A.irow,B.jcol);
        Ctmp.U = A.M*B.U;
        Ctmp.V = B.V;
        Ctmp = rSVD_rkmatrix(Ctmp,max([A.eps B.eps]));
        % conversion to supermatrix
        C = formatconversion(Ctmp,C);
    elseif strcmpi(A.type,'rkmatrix') && strcmpi(B.type,'rkmatrix')
        % solution as rkmatrix
        Ctmp = hmtx_create('rkmatrix',A.irow,B.jcol);
        Ctmp.U = A.U;
        Ctmp.V = B.V*(B.U'*A.V);
        Ctmp = rSVD_rkmatrix(Ctmp,max([A.eps B.eps]));
        % conversion to supermatrix
        C = formatconversion(Ctmp,C);
    end
else
    if strcmpi(A.type,'supermatrix') && strcmpi(B.type,'supermatrix')
        Ctmp = hmtx_create('supermatrix',A.irow,B.jcol);
        for i = 1:2
            for j = 1:2
                Ca = hmtx_create(C.type,A.irow,B.jcol);
                Ca = hmtx_mult2(A.M{i,1},B.M{1,j},Ca);
                
                Cb = hmtx_create(C.type,A.irow,B.jcol);
                Cb = hmtx_mult2(A.M{i,2},B.M{2,j},Cb);
                Ctmp.M{i,j} = hmtx_add(Ca,Cb,'+');
            end
        end
        C = formatconversion(Ctmp,C);
        C.eps = max([A.eps B.eps]);
    elseif strcmpi(A.type,'fullmatrix') && strcmpi(B.type,'supermatrix')
        % solution as fullmatrix
        Ctmp = hmtx_create('fullmatrix',A.irow,B.jcol);
        Ctmp.M = hmtx_MxH(A.M,B);
        Ctmp.eps = max([A.eps B.eps]);
        % conversion to supermatrix
        C = formatconversion(Ctmp,C);
    elseif strcmpi(A.type,'rkmatrix') && strcmpi(B.type,'supermatrix')
        % solution as rkmatrix
        Ctmp = hmtx_create('rkmatrix',A.irow,B.jcol);
        Ctmp.V = hmtx_MxH(A.V',B)';
        Ctmp.U = A.U;
        Ctmp = rSVD_rkmatrix(Ctmp,max([A.eps B.eps]));
        % conversion to supermatrix
        C = formatconversion(Ctmp,C);
    elseif strcmpi(A.type,'supermatrix') && strcmpi(B.type,'fullmatrix')
        % solution as fullmatrix
        Ctmp = hmtx_create('fullmatrix',A.irow,B.jcol);
        Ctmp.M = hmtx_HxM(A,B.M);
        Ctmp.eps = max([A.eps B.eps]);
        % conversion to supermatrix
        C = formatconversion(Ctmp,C);
    elseif strcmpi(A.type,'fullmatrix') && strcmpi(B.type,'fullmatrix')
        % solution as fullmatrix
        Ctmp = hmtx_create('fullmatrix',A.irow,B.jcol);
        Ctmp.M = A.M*B.M;
        Ctmp.eps = max([A.eps B.eps]);
        % conversion to supermatrix
        C = formatconversion(Ctmp,C);
    elseif strcmpi(A.type,'rkmatrix') && strcmpi(B.type,'fullmatrix')
        % solution as rkmatrix
        Ctmp = hmtx_create('rkmatrix',A.irow,B.jcol);
        Ctmp.U = A.U;
        Ctmp.V = B.M'*A.V;
        Ctmp = rSVD_rkmatrix(Ctmp,max([A.eps B.eps]));
        % conversion to supermatrix
        C = formatconversion(Ctmp,C);
    elseif strcmpi(A.type,'supermatrix') && strcmpi(B.type,'rkmatrix')
        % solution as rkmatrix
        Ctmp = hmtx_create('rkmatrix',A.irow,B.jcol);
        Ctmp.U = hmtx_HxM(A,B.U);
        Ctmp.V = B.V;
        Ctmp = rSVD_rkmatrix(Ctmp,max([A.eps B.eps]));
        % conversion to supermatrix
        C = formatconversion(Ctmp,C);
    elseif strcmpi(A.type,'fullmatrix') && strcmpi(B.type,'rkmatrix')
        % solution as rkmatrix
        Ctmp = hmtx_create('rkmatrix',A.irow,B.jcol);
        Ctmp.U = A.M*B.U;
        Ctmp.V = B.V;
        Ctmp = rSVD_rkmatrix(Ctmp,max([A.eps B.eps]));
        % conversion to supermatrix
        C = formatconversion(Ctmp,C);
    elseif strcmpi(A.type,'rkmatrix') && strcmpi(B.type,'rkmatrix')
        % solution as rkmatrix
        Ctmp = hmtx_create('rkmatrix',A.irow,B.jcol);
        Ctmp.U = A.U;
        Ctmp.V = B.V*(B.U'*A.V);
        Ctmp = rSVD_rkmatrix(Ctmp,max([A.eps B.eps]));
        % conversion to supermatrix
        C = formatconversion(Ctmp,C);
    end
end

% C = hmtx_compress(C);

end


function Hout = formatconversion(Hin,Hout)

if strcmpi(Hin.type,Hout.type)
    Hout = Hin;
else
    if strcmpi(Hin.type,'supermatrix') && strcmpi(Hout.type,'fullmatrix')
        Hout = super2full(Hin);
    elseif strcmpi(Hin.type,'supermatrix') && strcmpi(Hout.type,'rkmatrix')
        Hout = super2rkmatrix(Hin);
    elseif strcmpi(Hin.type,'rkmatrix') && strcmpi(Hout.type,'fullmatrix')
        Hout = rkmatrix2full(Hin);
    elseif strcmpi(Hin.type,'fullmatrix') && strcmpi(Hout.type,'rkmatrix')
        Hout = full2rkmatrix(Hin);
    elseif strcmpi(Hin.type,'rkmatrix') && strcmpi(Hout.type,'supermatrix')
        Hout = rkmatrix2super(Hin,Hout);
    elseif strcmpi(Hin.type,'fullmatrix') && strcmpi(Hout.type,'supermatrix')
        Hout = full2super(Hin,Hout);
    end
end

end




